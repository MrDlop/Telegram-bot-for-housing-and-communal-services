import telebot
import config
import time
import datetime
from datetime import datetime
import pyautogui
import httplib2
import apiclient.discovery
from oauth2client.service_account import ServiceAccountCredentials
import gspread

url_text = 'https://www.googleapis.com/auth/spreadsheets'
url_text_1 = 'https://www.googleapis.com/auth/drive'
CREDENTIALS_FILE = 'config.json'
credentials = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, [url_text, url_text_1])
httpAuth = credentials.authorize(httplib2.Http())
service = apiclient.discovery.build('sheets', 'v4', http=httpAuth)
spreadsheetId = config.ID

gc = gspread.authorize(credentials)
sht1 = gc.open_by_key(config.ID)
worksheet = sht1.worksheet("–õ–∏—Å—Ç1")
wks = sht1.worksheet("1")
wdfs = sht1.worksheet("–õ–∏—Å—Ç2")
# –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—è pyautogui –ø–æ —ç–∫—Ä–∞–Ω
screenWidth, screenHeight = pyautogui.size()
currentMouseX, currentMouseY = pyautogui.position()

day = 21
day1 = 22
days = 0
days2 = ''
a = 0
# —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –≤—ã–≤–æ–¥–æ–º —Ç–µ–∫—Å—Ç–∞
mess1 = "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é:"
mess2 = "–î–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü"
mess3 = "–ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞"
mess4 = "–ü–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç—ã"
mess5 = "–í—ã–±–µ—Ä–∏—Ç–µ —Å—á–µ—Ç—á–∏–∫, –ø–æ–∫–∞–∑–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–∞—Ç—å:"
mess6 = "–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç1"
pop = "–í—Ä–µ–º—è –ø—Ä–∏—Å–ª–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤, –≤—ã –º–æ–∂–µ—Ç–µ —Å–∫–∏–Ω—É—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–∏ "

bot = telebot.TeleBot(config.TOKEN)
poll_board = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
poll_board.row('–ù–∞–∑–∞–¥').add(
    '–û–ø—Ä–æ—Å 1', '–û–ø—Ä–æ—Å 2', '–û–ø—Ä–æ—Å 3')
ask_board = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
ask_board.row('–§–æ—Ç–æ').add('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
poll_1 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
poll_1.row("–ù–∞–∑–∞–¥")
keyboard8 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard8.add('–û—Ç–º–µ–Ω–∞')
keyboard16 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard16.row('–°—á–µ—Ç—á–∏–∫ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(2)')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã(2)')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(3)')
keyboard16.add('–°—á–µ—Ç—á–∏–∫ –≥–∞–∑–∞')
keyboard16.add('–ù–∞–∑–∞–¥')
keyboard_qwe = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard_qwe.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')

keyboard_auto = telebot.types.ReplyKeyboardMarkup(True, True).row('–í—Ö–æ–¥')
news_board = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
news_board.row('–û –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º —Ä–µ–º–æ–Ω—Ç–µ').add(
    '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç', '–ü—Ä–æ—Å—å–±—ã —É–±—Ä–∞—Ç—å –∞–≤—Ç–æ –∏ —Ç.–¥.', '–û–ø—Ä–æ—Å—ã', '–ù–∞–∑–∞–¥')
keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True).row('‚ùóÔ∏è–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –ê–î–°')
keyboard.add('üìÑ –°–ø—Ä–∞–≤–∫–∞', 'üìÖ –ù–æ–≤–æ—Å—Ç–∏')
keyboard.add('üí¨ –ß–∞—Ç –¥–æ–º–∞', '–°–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤')
reference_board = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
reference_board.add('üìÉ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
reference_board.add('üè¢ –û –¥–æ–º–µ', '–û–± –£–ö', '–ù–∞–∑–∞–¥')
lui = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
lui.row('–û –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º —Ä–µ–º–æ–Ω—Ç–µ')
lui.add('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç',
        '–ü—Ä–æ—Å—å–±—ã —É–±—Ä–∞—Ç—å –∞–≤—Ç–æ –∏ —Ç.–¥.',
        '–û–ø—Ä–æ—Å—ã', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
hks_board = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
hks_board.add('–î–∞–ª—å—à–µ', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
keyboard_mc = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard_mc.row('–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤').add('–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã',
                                        '–ü—Ä–∞–π—Å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏',
                                        '–ß–∞—Å—ã –ø—Ä–∏–µ–º–∞',
                                        '–ù–∞–∑–∞–¥')

your_home = ((service.spreadsheets().values().batchGet(spreadsheetId=spreadsheetId,
                                                       ranges=["–õ–∏—Å—Ç1!I2:I240"],
                                                       valueRenderOption='FORMATTED_VALUE',
                                                       dateTimeRenderOption='FORMATTED_STRING').execute())[
    'valueRanges'][0]['values'])


@bot.message_handler(commands=['start'])
# –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤—ã –Ω–∞—á–∞–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
def start_message(message):
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã –∑–∞—à–ª–∏ –≤ —á–∞—Ç-–±–æ—Ç–∞ –æ—Ç –ú–æ–π–ú–ö–î.', reply_markup=keyboard_auto)


@bot.message_handler(content_types=['text'])
def manul(message):
    if message.text.lower() == '–≤—Ö–æ–¥':
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û')
        bot.register_next_step_handler(message, two_q)


def two_q(message):
    global answers
    answers = [message.text]
    send = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä')
    bot.register_next_step_handler(send, three_q)


def three_q(message):
    answers.append(message.text)
    if len(answers[1]) > 15:
        if not worksheet.findall(answers[0]):
            bot.send_message(message.from_user.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ –§–ò–û.', reply_markup=keyboard_auto)
            bot.register_next_step_handler(message, two_q)
        else:
            global cell
            cell = worksheet.find(answers[0])
            results = service.spreadsheets().values().batchGet(spreadsheetId=spreadsheetId,
                                                               ranges=["–õ–∏—Å—Ç1!B2:B240"],
                                                               valueRenderOption='FORMATTED_VALUE',
                                                               dateTimeRenderOption='FORMATTED_STRING').execute()

            result = service.spreadsheets().values().batchGet(spreadsheetId=spreadsheetId,
                                                              ranges=["–õ–∏—Å—Ç1!C%s" % cell.row],
                                                              valueRenderOption='FORMATTED_VALUE',
                                                              dateTimeRenderOption='FORMATTED_STRING').execute()
            if int(any(any(answers[1] in s for s in i) for i in results['valueRanges'][0]['values'])) == 1 and int(
                    any(any(answers[0] in s for s in i) for i in result['valueRanges'][0]['values'])) == 1:
                service.spreadsheets().values().batchUpdate(spreadsheetId=spreadsheetId, body={
                    "valueInputOption": "USER_ENTERED",
                    "data": [
                        {"range": "–õ–∏—Å—Ç1!I%s:AA%s" % (cell.row, cell.row),
                         "majorDimension": "ROWS",
                         "values": [
                             [message.chat.id, (wks.find(worksheet.cell(cell.row, 1).value)).row, '0', '0', answers[1],
                              '0', '0', '0', '0', '0', '0', '0', '0', '0',
                              '0', '0', '0', '0', '0', ]]}
                    ]}).execute()
                bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä(–µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ 1)")
                bot.register_next_step_handler(message, phone)
            else:
                bot.send_message(message.from_user.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ –§–ò–û.', reply_markup=keyboard_auto)
                bot.register_next_step_handler(message, manul)
    else:
        bot.send_message(message.from_user.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ –§–ò–û.', reply_markup=keyboard_auto)
        bot.register_next_step_handler(message, manul)


def phone(message):
    answers.append(message.text)

    service.spreadsheets().values().batchUpdate(spreadsheetId=spreadsheetId, body={
        "valueInputOption": "USER_ENTERED",
        "data": [
            {"range": "–õ–∏—Å—Ç1!L%s" % cell.row,
             "majorDimension": "ROWS",
             "values": [[answers[2]]]}
        ]}).execute()
    bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
    bot.register_next_step_handler(message, menu)


def menu(message):
    global a
    global day1
    global days
    if message.text.lower() == 'üìÑ —Å–ø—Ä–∞–≤–∫–∞':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", reply_markup=reference_board)
        bot.register_next_step_handler(message, reference)
    elif message.text.lower() == '/hks_sch':
        bot.register_next_step_handler(message, hks_sch_message)
    elif message.text.lower() == 'üìÖ –Ω–æ–≤–æ—Å—Ç–∏':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–∞", reply_markup=news_board)
        bot.register_next_step_handler(message, news)
    elif message.text.lower() == 'üí¨ —á–∞—Ç –¥–æ–º–∞':
        user_hocha = wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 2).value
        if user_hocha != "":
            hocha = wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 2).value
            hocha_but = telebot.types.InlineKeyboardButton(text='–ß–∞—Ç –¥–æ–º–∞', url=hocha)
            keyboard_hocha = telebot.types.InlineKeyboardMarkup().add(hocha_but)
            bot.send_message(message.chat.id, '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=keyboard_hocha)
            bot.register_next_step_handler(message, menu)
        elif user_hocha == "":
            # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
            pyautogui.click(25, 47)  # –º–µ–Ω—é
            time.sleep(0.5)
            pyautogui.click(128, 188)  # —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É
            time.sleep(0.5)
            pyautogui.write(str(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 1).value),
                            interval=0.05)  # –Ω–∞–∑–≤–∞–Ω–∏–µ
            pyautogui.click(614, 587)  # –¥–∞–ª–µ–µ
            time.sleep(0.1)
            pyautogui.click(489, 365)  # –¥–æ–ø. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            time.sleep(0.1)
            pyautogui.click(606, 804)  # —Å–æ–∑–¥–∞—Ç—å
            time.sleep(0.1)
            pyautogui.moveTo(935, 47)
            time.sleep(0.3)
            pyautogui.click()  # –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            time.sleep(0.5)
            pyautogui.click(851, 162)  # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–æ–π
            time.sleep(0.5)
            pyautogui.click(469, 689)  # –∞–¥–º–∏–Ω—ã
            time.sleep(0.5)
            pyautogui.click(420, 805)  # –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞
            time.sleep(0.5)
            pyautogui.click(474, 424)  # –¥–æ–ø. –∞–¥–º–∏–Ω
            time.sleep(0.1)
            pyautogui.click(454, 578)  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
            time.sleep(0.1)
            pyautogui.click(595, 939)  # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
            time.sleep(0.3)
            pyautogui.click(606, 803)  # –∑–∞–∫—Ä—ã—Ç—å
            time.sleep(0.1)
            pyautogui.click(470, 539)  # —Ç–∏–ø –≥—Ä—É–ø–ø—ã
            time.sleep(0.1)
            pyautogui.click(359, 637)  # –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
            time.sleep(0.1)
            pyautogui.click(417, 652)  # —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É
            time.sleep(0.1)
            pyautogui.click(605, 571)  # –æ–∫
            time.sleep(0.1)
            pyautogui.click(376, 655)  # –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
            time.sleep(0.1)
            pyautogui.click(594, 721)  # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
            time.sleep(0.1)
            pyautogui.click(598, 827)  # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
            time.sleep(0.1)
            pyautogui.click(1446, 806)  # –∫–ª–∏–∫
            time.sleep(0.5)
            pyautogui.hotkey('ctrl', 'v')
            time.sleep(0.1)
            pyautogui.press('enter')  # –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            time.sleep(0.1)
            pyautogui.click(984, 562)  # —Ñ–∞–π–ª
            time.sleep(0.1)
            pyautogui.click(1035, 647)  # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç
            hocha_1 = wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 2).value
            hocha_but = telebot.types.InlineKeyboardButton(text='–ß–∞—Ç –¥–æ–º–∞', url=hocha_1)
            keyboard_hocha = telebot.types.InlineKeyboardMarkup().add(hocha_but)
            bot.send_message(message.chat.id, '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=keyboard_hocha)
            bot.register_next_step_handler(message, menu)

    elif message.text.lower() == '‚ùóÔ∏è–æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –∞–¥—Å':
        bot.send_message(message.chat.id, "–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É")
        bot.register_next_step_handler(message, ads_1)
    elif message.text.lower() == "—Å–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤":
        now = datetime.now()
        day_now = now.day
        if day_now == day:
            bot.send_message(message.from_user.id, mess5,
                             reply_markup=keyboard16)
            bot.register_next_step_handler(message, meter_reading)
        elif day_now == day1:
            bot.send_message(message.from_user.id, mess5,
                             reply_markup=keyboard16)
            bot.register_next_step_handler(message, meter_reading)
        else:
            bot.send_message(message.from_user.id, "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –¥–Ω–∏ —Å–¥–∞—á–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π —Å—á–µ—Ç—á–∏–∫–æ–≤!",
                             reply_markup=keyboard_qwe)
            bot.register_next_step_handler(message, exit5)
    elif message.text.lower() != "—Å–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤" and message.text.lower() != '‚ùóÔ∏è–æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –æ ' \
                                                                                         '–ø—Ä–æ–±–ª–µ–º–µ –≤ –∞–¥—Å' and \
            message.text.lower() != 'üí¨ —á–∞—Ç –¥–æ–º–∞' and message.text.lower() != 'üìÖ –Ω–æ–≤–æ—Å—Ç–∏' and message.text.lower() \
            != 'üìÑ —Å–ø—Ä–∞–≤–∫–∞' and message.text.lower() != 'üìÑ —Å–ø—Ä–∞–≤–∫–∞':
        bot.register_next_step_handler(message, menu)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–¥–∞—á–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
def hks_sch_message(message):
    global a
    if a == 1:
        a = 0
        bot.send_message(message.from_user.id, "–í—ã–∫–ª—é—á–µ–Ω–æ")
        bot.register_next_step_handler(message, menu)
    else:
        bot.send_message(message.from_user.id, "–í–∫–ª—é—á–µ–Ω–æ")
        bot.register_next_step_handler(message, meters)
        bot.register_next_step_handler(message, menu)


def ads_1(message):
    bot.send_message(config.worker, message.from_user.username)
    bot.send_message(config.worker, message.text)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –≤ –∫–∞–∫–æ–º –≤–∏–¥–µ –≤—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", reply_markup=ask_board)
    bot.register_next_step_handler(message, adc_0)


def adc_0(message):
    if message.text.lower() == '—Ñ–æ—Ç–æ':
        bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ")
        bot.register_next_step_handler(message, adc_photo)
    elif message.text.lower() == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
        bot.send_message(message.chat.id, "–î–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–∂–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–∫-–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "
                                          "–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å–Ω–æ–≤–∞ –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –¥–æ–∫-–≤–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞"
                                          " –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)
    elif message.text.lower() != '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' and message.text.lower() != '—Ñ–æ—Ç–æ':
        bot.register_next_step_handler(message, adc_0)


def adc_photo(message):
    ant = message.photo[0].file_id
    bot.send_photo(config.worker, ant)
    bot.send_message(message.chat.id, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É")
    bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
    bot.register_next_step_handler(message, menu)  # –≤—Å–µ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º


def news(message):
    if message.text.lower() == '–æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º —Ä–µ–º–æ–Ω—Ç–µ':
        bot.send_message(message.chat.id,
                         wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 4).value)
        bot.register_next_step_handler(message, news)
    elif message.text.lower() == '—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç':
        bot.send_message(message.chat.id,
                         wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 5).value)
        bot.register_next_step_handler(message, news)
    elif message.text.lower() == '–ø—Ä–æ—Å—å–±—ã —É–±—Ä–∞—Ç—å –∞–≤—Ç–æ –∏ —Ç.–¥.':
        bot.send_message(message.chat.id,
                         wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 6).value)
        bot.register_next_step_handler(message, news)
    elif message.text.lower() == '–æ–ø—Ä–æ—Å—ã':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ä–æ—Å", reply_markup=poll_board)
        bot.register_next_step_handler(message, poll)
    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)
    elif message.text.lower() != '–æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º —Ä–µ–º–æ–Ω—Ç–µ' and message.text.lower() != '—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç' and \
            message.text.lower() != '–ø—Ä–æ—Å—å–±—ã —É–±—Ä–∞—Ç—å –∞–≤—Ç–æ –∏ —Ç.–¥.' and \
            message.text.lower() != '–æ–ø—Ä–æ—Å—ã' and message.text.lower() != '–Ω–∞–∑–∞–¥':
        bot.register_next_step_handler(message, news)


# —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç meter_reading –¥–æ gas_meter2 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—á–µ—Ç—á–∏–∫–∞–º–∏
def meter_reading(message):
    global b1
    global a0
    if message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏':
        meter_h(message, message.chat.id, 14, electricity_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã':
        meter_h(message, message.chat.id, 15, hot_water_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã':
        meter_h(message, message.chat.id, 16, cold_water_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(2)':
        meter_h(message, message.chat.id, 17, hot_water2_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã(2)':
        meter_h(message, message.chat.id, 18, cold_water2_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(3)':
        meter_h(message, message.chat.id, 19, hot_water3_meter1)

    elif message.text.lower() == '—Å—á–µ—Ç—á–∏–∫ –≥–∞–∑–∞':
        meter_h(message, message.chat.id, 20, gas_meter1)

    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)

    elif message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏' and message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã' and \
            message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã' and message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(2)' and \
            message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã(2)' and \
            message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã(3)' and \
            message.text.lower() != '—Å—á–µ—Ç—á–∏–∫ –≥–∞–∑–∞' and message.text.lower() != '–Ω–∞–∑–∞–¥':
        bot.register_next_step_handler(message, meter_reading)


def exit5(message):
    if message.text.lower() == '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        bot.send_message(message.from_user.id, mess1,
                         reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)
    elif message.text.lower() != '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        bot.register_next_step_handler(message, exit5)


def meters(message):
    global day1
    global days
    global days2
    global day
    global a
    a += 1
    while True:
        now = datetime.now()
        month = now.month
        year = now.year
        day_now = now.day
        if a == 2:
            a = 0
            break
        if day_now == day:
            if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:
                days = 10
                days2 = '10'
            elif month == 4 or month == 6 or month == 9 or month == 11:
                days = 9
                days2 = '9'
            elif month == 2:
                if year % 4 == 0:
                    days = 8
                    days2 = '8'
                else:
                    days = 7
                    days2 = '7'
            opo = 0

            for user in str(your_home[opo]).replace("['", '').replace("']", ''):
                opo += opo
                print(user)
                bot.send_message(user, pop + days2 + "–¥–Ω–µ–π",
                                 reply_markup=keyboard)
            days -= 1
            day1 += 1
            time.sleep(86400)
        elif day_now == day1:
            day1 += 1
            if days == 0:
                for user in your_home:
                    bot.send_message(user, "–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞ –ø–æ–∫–∞–∑–∞–Ω–∏–π —Å—á–µ—Ç—á–∏–∫–æ–≤ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å",
                                     reply_markup=keyboard_qwe)
                day1 = 22
                bot.register_next_step_handler(message, exit5)
                time.sleep(86400)
            else:
                days -= 1
            time.sleep(86400)


def electricity_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 16, 23, electricity_meter2)


def electricity_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 23)


def hot_water_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 18, 25, hot_water_meter2)


def hot_water_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 25)


def cold_water_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 14, 21, cold_water_meter2)


def cold_water_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 21)


def hot_water2_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 19, 26, hot_water2_meter2)


def hot_water2_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 26)


def cold_water2_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 15, 22, cold_water2_meter2)


def cold_water2_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 22)


def hot_water3_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 20, 27, hot_water3_meter2)


def hot_water3_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 27)


def gas_meter1(message):
    meters_h(message, message.chat.id, message.from_user.id, message.text, 17, 24, gas_meter2)


def gas_meter2(message):
    meters_h2(message, message.from_user.id, message.chat.id, message.text, 24)


def meter_h(message, id, str_A, f2):
    if days == 1:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –æ—Å—Ç–∞–ª—Å—è " + days2 + " –¥–µ–Ω—å", reply_markup=keyboard8)
        if worksheet.cell(worksheet.find(str(id)).row, str_A).value == 0:
            bot.send_message(id, mess2)
            bot.register_next_step_handler(message, f2)
        else:
            bot.send_message(id, mess3)
            bot.register_next_step_handler(message, f2)
    else:
        bot.send_message(id, "–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + days2 + " –¥–Ω–µ–π", reply_markup=keyboard8)
        if worksheet.cell(worksheet.find(str(id)).row, str_A).value == 0:
            bot.send_message(id, mess2)
            bot.register_next_step_handler(message, f2)
        else:
            bot.send_message(id, mess3)
            bot.register_next_step_handler(message, f2)


def meters_h(message, id, friId, text, str_A, str_B, f2):
    if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(friId, mess5,
                         reply_markup=keyboard16)
        bot.register_next_step_handler(message, meter_reading)
    elif message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
        if int(worksheet.cell(worksheet.find(str(id)).row, str_A).value) == 0:
            worksheet.update_cell(worksheet.find(str(id)).row, str_B, text)
            worksheet.update_cell(worksheet.find(str(id)).row, str_A, '1')
            bot.send_message(friId, mess6)
            bot.register_next_step_handler(message, f2)
        elif message.text:
            worksheet.update_cell(worksheet.find(str(id)).row, str_B,
                                  worksheet.cell(worksheet.find(str(id)).row,
                                                 str_B).value + '/' + text)
            bot.send_message(friId, mess4, reply_markup=keyboard_qwe)
            bot.register_next_step_handler(message, exit5)


def meters_h2(message, friId, id, text, str_A):
    if text:
        worksheet.update_cell(worksheet.find(str(id)).row, str_A,
                              worksheet.cell(worksheet.find(str(id)).row, str_A).value + '|' + text)
        bot.send_message(friId, mess4, reply_markup=keyboard_qwe)
        bot.register_next_step_handler(message, exit5)


def reference(message):
    if message.text.lower() == 'üè¢ –æ –¥–æ–º–µ':
        bot.send_message(message.chat.id,
                         wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 3).value)
        bot.register_next_step_handler(message, reference)
    elif message.text.lower() == 'üìÉ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keyboard_mc)
        bot.register_next_step_handler(message, mc)
    elif message.text.lower() == '–æ–± —É–∫':
        bot.send_message(message.chat.id, wdfs.cell(
            wdfs.find(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 8).value).row,
            6).value)
        bot.register_next_step_handler(message, reference)
    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, mess1, reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)
    elif message.text.lower() != 'üè¢ –æ –¥–æ–º–µ' and message.text.lower() != 'üìÉ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' and \
            message.text.lower() != '–æ–± —É–∫' and message.text.lower() != '–Ω–∞–∑–∞–¥':
        bot.register_next_step_handler(message, reference)


def mc(message):
    if message.text.lower() == '–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤':
        bot.send_message(message.chat.id, wdfs.cell(
            wdfs.find(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 8).value).row,
            2).value)
        bot.register_next_step_handler(message, mc)
    elif message.text.lower() == '–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã':
        bot.send_message(message.chat.id, wdfs.cell(
            wdfs.find(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 8).value).row,
            3).value)
        bot.register_next_step_handler(message, mc)
    elif message.text.lower() == '–ø—Ä–∞–π—Å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏':
        bot.send_message(message.chat.id, wdfs.cell(
            wdfs.find(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 8).value).row,
            4).value)
        bot.register_next_step_handler(message, mc)
    elif message.text.lower() == '—á–∞—Å—ã –ø—Ä–∏–µ–º–∞':
        bot.send_message(message.chat.id, wdfs.cell(
            wdfs.find(wks.cell(worksheet.cell(worksheet.find(str(message.chat.id)).row, 10).value, 8).value).row,
            5).value)
        bot.register_next_step_handler(message, mc)
    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", reply_markup=reference_board)
        bot.register_next_step_handler(message, reference)
    elif message.text.lower() != '–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤' and message.text.lower() != '–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã' and \
            message.text.lower() != '–ø—Ä–∞–π—Å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏' and \
            message.text.lower() != '—á–∞—Å—ã –ø—Ä–∏–µ–º–∞' and message.text.lower() != '–Ω–∞–∑–∞–¥':
        bot.register_next_step_handler(message, mc)


def poll(message):
    if message.text.lower() == '–æ–ø—Ä–æ—Å 1':
        question = wks.cell(wks.find('–æ–ø—Ä–æ—Å1').row, 14).value
        opti = wks.row_values(wks.find('–æ–ø—Ä–æ—Å1').row)
        del opti[0:15]
        bot.send_message(message.chat.id, str(question) + '\n–í–∞—Ä–∏–∞–Ω—Ç—ã –û—Ç–≤–µ—Ç–æ–≤\n' + "\n".join(opti), reply_markup=poll_1)
        bot.register_next_step_handler(message, poll1)
    elif message.text.lower() == '–æ–ø—Ä–æ—Å 2':
        question = wks.cell(wks.find('–æ–ø—Ä–æ—Å2').row, 14).value
        opti = wks.row_values(wks.find('–æ–ø—Ä–æ—Å2').row)
        del opti[0:15]
        bot.send_message(message.chat.id, str(question) + '\n–í–∞—Ä–∏–∞–Ω—Ç—ã –û—Ç–≤–µ—Ç–æ–≤\n' + "\n".join(opti), reply_markup=poll_1)
        bot.register_next_step_handler(message, poll2)

    elif message.text.lower() == '–æ–ø—Ä–æ—Å 3':
        question = wks.cell(wks.find('–æ–ø—Ä–æ—Å3').row, 14).value
        opti = wks.row_values(wks.find('–æ–ø—Ä–æ—Å3').row)
        del opti[0:15]
        bot.send_message(message.chat.id, str(question) + '\n–í–∞—Ä–∏–∞–Ω—Ç—ã –û—Ç–≤–µ—Ç–æ–≤\n' + "\n".join(opti), reply_markup=poll_1)
        bot.register_next_step_handler(message, poll3)
    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–∞", reply_markup=news_board)
        bot.register_next_step_handler(message, news)
    elif message.text.lower() != '–æ–ø—Ä–æ—Å 1' and message.text.lower() != '–æ–ø—Ä–æ—Å 2' and \
            message.text.lower() != '–æ–ø—Ä–æ—Å 3' and \
            message.text.lower() != '–Ω–∞–∑–∞–¥':
        bot.register_next_step_handler(message, poll)


def poll1(message):
    poll_all(message, message.text, message.chat.id, poll1, '–æ–ø—Ä–æ—Å1')


def poll2(message):
    poll_all(message, message.text, message.chat.id, poll2, '–æ–ø—Ä–æ—Å2')


def poll3(message):
    poll_all(message, message.text, message.chat.id, poll3, '–æ–ø—Ä–æ—Å3')


def poll_all(message, text, id, f, txt):
    opti = wks.row_values(wks.find(txt).row)
    del opti[0:15]
    if opti.count(text) == 1:
        wks.update_cell(int(wks.find(txt).row + 1), int(opti.index(text) + 16),
                        int(wks.cell(wks.find(txt).row + 1, opti.index(text) + 16).value) + 1)
        bot.send_message(id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ä–æ—Å", reply_markup=poll_board)
        bot.register_next_step_handler(message, poll)
    elif message.text.lower() == '–Ω–∞–∑–∞–¥':
        bot.send_message(id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ä–æ—Å", reply_markup=poll_board)
        bot.register_next_step_handler(message, poll)
    elif message.text.lower() != '–Ω–∞–∑–∞–¥' and opti.count(text) != 1:
        bot.register_next_step_handler(message, f)


bot.polling()
